Use cases:
----------
- User create

    POST /classes
    {
        "name": "Profile",
        "definer": "$Core",
        "fields": {
            "actions": {
                "type": "array",
                "items": {
                    "type": "text"
                }
            }
        },
        "edges": {
            "controls": {
                "label": "C",
                "direction": "out"
            },
            "authenticator": {
                "label": "AUTHENTICATES",
                "direction": "in",
                "multiple": true
            }
        }
    }
    
When a User node is created the client receives response parameters

- Example 1.

Create user
    POST /objects data:
    {
        "class": "$User",
        "fields": {
            "name": "Joe",
            "actions": [1,2,3]
        },
        "edges": {
            "authenticator": {
                "pair": {
                    "fields": {
                        "email": "john@smith.com",
                        "password": "**********"
                    }
                }
            }
        }
    }

responseData:
{
    "id": "12",
    "class": "$User",
    "fields": {
        "name": "Joe",
        "actions": [1,2,3]
    },
    "edges": {
        "authenticator": {
            "pair": {
                "fields": {
                    "email": "john@smith.com",
                    "password": "**********"
                }
            }
        }
    }
}

User.events:
{
    "objectCreated": {
        "createObject": {
            "class": "$Account",
            "fields": {
                "email": "$responseData.edges.authenticator.pair.fields.email",
                "password": $responseData.edges.authenticator.pair.fields.password"
            },
            "edges": {
                "authenticates": {
                    "id": "$responseData.id"
                }
            }
        }
    }
}